"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _map = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/map"));

var _filter = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/filter"));

var _trim = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/trim"));

var _includes = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/includes"));

var _startsWith = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/instance/starts-with"));

var _os = _interopRequireDefault(require("os"));

var _path = _interopRequireDefault(require("path"));

var _context, _context2, _context3;

const RESERVED_TAGS = ['@debug', '@skip'];
const All_TAGS = (0, _map.default)(_context = (0, _filter.default)(_context2 = (process.env.TAGS || '').split(',')).call(_context2, tag => tag)).call(_context, tag => (0, _trim.default)(tag).call(tag));
const TAGS = (0, _filter.default)(All_TAGS).call(All_TAGS, tag => !(0, _includes.default)(RESERVED_TAGS).call(RESERVED_TAGS, tag));
const env = {
  ENV_NAME: process.env.ENV || '',
  EXCLUDE_TAGS: (0, _map.default)(_context3 = (0, _filter.default)(TAGS).call(TAGS, tag => (0, _startsWith.default)(tag).call(tag, 'not'))).call(_context3, tag => tag.split('not ')[1]),
  INCLUDE_TAGS: (0, _filter.default)(TAGS).call(TAGS, tag => !(0, _startsWith.default)(tag).call(tag, 'not')),
  TAGS,
  TEMP_PATH: _path.default.join(_os.default.tmpdir(), 'cucumber-jest'),
  SHOW_TEMP_PATH: process.env.CUCUMBER_JEST_SHOW_TEMP_PATH === 'true'
};

if (env.SHOW_TEMP_PATH) {
  process.stdout.write(`\ntemporary directory: ${env.TEMP_PATH}\n`);
}

var _default = env;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25maWdzL2Vudi50cyJdLCJuYW1lcyI6WyJSRVNFUlZFRF9UQUdTIiwiQWxsX1RBR1MiLCJwcm9jZXNzIiwiZW52IiwiVEFHUyIsInNwbGl0IiwidGFnIiwiRU5WX05BTUUiLCJFTlYiLCJFWENMVURFX1RBR1MiLCJJTkNMVURFX1RBR1MiLCJURU1QX1BBVEgiLCJwYXRoIiwiam9pbiIsIm9zIiwidG1wZGlyIiwiU0hPV19URU1QX1BBVEgiLCJDVUNVTUJFUl9KRVNUX1NIT1dfVEVNUF9QQVRIIiwic3Rkb3V0Iiwid3JpdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBLE1BQU1BLGFBQWEsR0FBRyxDQUFDLFFBQUQsRUFBVyxPQUFYLENBQXRCO0FBRUEsTUFBTUMsUUFBUSxHQUFHLCtEQUFDQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixFQUFyQixFQUNaQyxLQURZLENBQ04sR0FETSxtQkFFSkMsR0FBRCxJQUFTQSxHQUZKLGtCQUdQQSxHQUFELElBQVMsbUJBQUFBLEdBQUcsTUFBSCxDQUFBQSxHQUFHLENBSEosQ0FBakI7QUFLQSxNQUFNRixJQUFJLEdBQUcscUJBQUFILFFBQVEsTUFBUixDQUFBQSxRQUFRLEVBQVNLLEdBQUQsSUFBUyxDQUFDLHVCQUFBTixhQUFhLE1BQWIsQ0FBQUEsYUFBYSxFQUFVTSxHQUFWLENBQS9CLENBQXJCO0FBRUEsTUFBTUgsR0FBRyxHQUFHO0FBQ1JJLEVBQUFBLFFBQVEsRUFBRUwsT0FBTyxDQUFDQyxHQUFSLENBQVlLLEdBQVosSUFBbUIsRUFEckI7QUFFUkMsRUFBQUEsWUFBWSxFQUFFLG1EQUFBTCxJQUFJLE1BQUosQ0FBQUEsSUFBSSxFQUFTRSxHQUFELElBQVMseUJBQUFBLEdBQUcsTUFBSCxDQUFBQSxHQUFHLEVBQVksS0FBWixDQUFwQixDQUFKLGtCQUNUQSxHQUFELElBQVNBLEdBQUcsQ0FBQ0QsS0FBSixDQUFVLE1BQVYsRUFBa0IsQ0FBbEIsQ0FEQyxDQUZOO0FBS1JLLEVBQUFBLFlBQVksRUFBRSxxQkFBQU4sSUFBSSxNQUFKLENBQUFBLElBQUksRUFBU0UsR0FBRCxJQUFTLENBQUMseUJBQUFBLEdBQUcsTUFBSCxDQUFBQSxHQUFHLEVBQVksS0FBWixDQUFyQixDQUxWO0FBTVJGLEVBQUFBLElBTlE7QUFPUk8sRUFBQUEsU0FBUyxFQUFFQyxjQUFLQyxJQUFMLENBQVVDLFlBQUdDLE1BQUgsRUFBVixFQUF1QixlQUF2QixDQVBIO0FBUVJDLEVBQUFBLGNBQWMsRUFBRWQsT0FBTyxDQUFDQyxHQUFSLENBQVljLDRCQUFaLEtBQTZDO0FBUnJELENBQVo7O0FBV0EsSUFBSWQsR0FBRyxDQUFDYSxjQUFSLEVBQXdCO0FBQ3BCZCxFQUFBQSxPQUFPLENBQUNnQixNQUFSLENBQWVDLEtBQWYsQ0FBc0IsMEJBQXlCaEIsR0FBRyxDQUFDUSxTQUFVLElBQTdEO0FBQ0g7O2VBRWNSLEciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgb3MgZnJvbSAnb3MnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5cbmNvbnN0IFJFU0VSVkVEX1RBR1MgPSBbJ0BkZWJ1ZycsICdAc2tpcCddO1xuXG5jb25zdCBBbGxfVEFHUyA9IChwcm9jZXNzLmVudi5UQUdTIHx8ICcnKVxuICAgIC5zcGxpdCgnLCcpXG4gICAgLmZpbHRlcigodGFnKSA9PiB0YWcpXG4gICAgLm1hcCgodGFnKSA9PiB0YWcudHJpbSgpKTtcblxuY29uc3QgVEFHUyA9IEFsbF9UQUdTLmZpbHRlcigodGFnKSA9PiAhUkVTRVJWRURfVEFHUy5pbmNsdWRlcyh0YWcpKTtcblxuY29uc3QgZW52ID0ge1xuICAgIEVOVl9OQU1FOiBwcm9jZXNzLmVudi5FTlYgfHwgJycsXG4gICAgRVhDTFVERV9UQUdTOiBUQUdTLmZpbHRlcigodGFnKSA9PiB0YWcuc3RhcnRzV2l0aCgnbm90JykpLm1hcChcbiAgICAgICAgKHRhZykgPT4gdGFnLnNwbGl0KCdub3QgJylbMV1cbiAgICApLFxuICAgIElOQ0xVREVfVEFHUzogVEFHUy5maWx0ZXIoKHRhZykgPT4gIXRhZy5zdGFydHNXaXRoKCdub3QnKSksXG4gICAgVEFHUyxcbiAgICBURU1QX1BBVEg6IHBhdGguam9pbihvcy50bXBkaXIoKSwgJ2N1Y3VtYmVyLWplc3QnKSxcbiAgICBTSE9XX1RFTVBfUEFUSDogcHJvY2Vzcy5lbnYuQ1VDVU1CRVJfSkVTVF9TSE9XX1RFTVBfUEFUSCA9PT0gJ3RydWUnXG59O1xuXG5pZiAoZW52LlNIT1dfVEVNUF9QQVRIKSB7XG4gICAgcHJvY2Vzcy5zdGRvdXQud3JpdGUoYFxcbnRlbXBvcmFyeSBkaXJlY3Rvcnk6ICR7ZW52LlRFTVBfUEFUSH1cXG5gKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZW52O1xuIl19