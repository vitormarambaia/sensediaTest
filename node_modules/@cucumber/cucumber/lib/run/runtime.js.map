{"version":3,"file":"runtime.js","sourceRoot":"","sources":["../../src/run/runtime.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sDAImB;AAKnB,kFAAyD;AAEzD,SAAgB,WAAW,CAAC,EAC1B,GAAG,EACH,gBAAgB,EAChB,kBAAkB,EAClB,SAAS,EACT,KAAK,EACL,kBAAkB,EAClB,gBAAgB,EAChB,0BAA0B,EAC1B,OAAO,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAE,GAAG,cAAc,EAAE,GAAG,EAAE,GAWlD;IACC,uDAAuD;IACvD,MAAM,OAAO,GAAG;QACd,GAAG,iCAAuB;QAC1B,GAAG,cAAc;KAClB,CAAA;IACD,IAAI,QAAQ,GAAG,CAAC,EAAE;QAChB,OAAO,IAAI,qBAAW,CAAC;YACrB,GAAG;YACH,gBAAgB;YAChB,kBAAkB;YAClB,SAAS;YACT,OAAO;YACP,KAAK;YACL,kBAAkB;YAClB,gBAAgB;YAChB,0BAA0B;YAC1B,eAAe,EAAE,QAAQ;SAC1B,CAAC,CAAA;KACH;IACD,OAAO,IAAI,iBAAO,CAAC;QACjB,gBAAgB;QAChB,kBAAkB;QAClB,KAAK;QACL,SAAS;QACT,kBAAkB;QAClB,OAAO;KACR,CAAC,CAAA;AACJ,CAAC;AAhDD,kCAgDC","sourcesContent":["import Runtime, {\n  DEFAULT_RUNTIME_OPTIONS,\n  IRuntime,\n  IRuntimeOptions,\n} from '../runtime'\nimport { EventEmitter } from 'events'\nimport { EventDataCollector } from '../formatter/helpers'\nimport { IdGenerator } from '@cucumber/messages'\nimport { ISupportCodeLibrary } from '../support_code_library_builder/types'\nimport Coordinator from '../runtime/parallel/coordinator'\n\nexport function makeRuntime({\n  cwd,\n  eventBroadcaster,\n  eventDataCollector,\n  pickleIds,\n  newId,\n  supportCodeLibrary,\n  supportCodePaths,\n  supportCodeRequiredModules,\n  options: { parallel = 0, ...runtimeOptions } = {},\n}: {\n  cwd: string\n  eventBroadcaster: EventEmitter\n  eventDataCollector: EventDataCollector\n  newId: IdGenerator.NewId\n  pickleIds: string[]\n  supportCodeLibrary: ISupportCodeLibrary\n  supportCodePaths: string[]\n  supportCodeRequiredModules: string[]\n  options: Partial<IRuntimeOptions> & { parallel?: number }\n}): IRuntime {\n  // sprinkle specified runtime options over the defaults\n  const options = {\n    ...DEFAULT_RUNTIME_OPTIONS,\n    ...runtimeOptions,\n  }\n  if (parallel > 0) {\n    return new Coordinator({\n      cwd,\n      eventBroadcaster,\n      eventDataCollector,\n      pickleIds,\n      options,\n      newId,\n      supportCodeLibrary,\n      supportCodePaths,\n      supportCodeRequiredModules,\n      numberOfWorkers: parallel,\n    })\n  }\n  return new Runtime({\n    eventBroadcaster,\n    eventDataCollector,\n    newId,\n    pickleIds,\n    supportCodeLibrary,\n    options,\n  })\n}\n"]}