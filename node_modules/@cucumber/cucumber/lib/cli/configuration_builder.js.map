{"version":3,"file":"configuration_builder.js","sourceRoot":"","sources":["../../src/cli/configuration_builder.ts"],"names":[],"mappings":";;;;;;AACA,wEAA8C;AAGvC,KAAK,UAAU,kBAAkB,CACtC,QAAqB,EACrB,GAAsB;IAEtB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,QAAQ,CAAA;IAClC,OAAO;QACL,OAAO,EAAE;YACP,KAAK,EAAE,IAAI;YACX,cAAc,EAAE,OAAO,CAAC,QAAQ;YAChC,KAAK,EAAE,OAAO,CAAC,IAAI;YACnB,aAAa,EAAE,OAAO,CAAC,IAAI;YAC3B,KAAK,EAAE,OAAO,CAAC,KAAK;SACrB;QACD,OAAO,EAAE;YACP,aAAa,EAAE,OAAO,CAAC,aAAa;YACpC,KAAK,EAAE,OAAO,CAAC,OAAO;SACvB;QACD,OAAO,EAAE;YACP,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,iBAAiB,EAAE,CAAC,OAAO,CAAC,SAAS;YACrC,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,cAAc,EAAE,OAAO,CAAC,cAAc;YACtC,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,eAAe,EAAE,OAAO,CAAC,eAAe;SACzC;QACD,OAAO,EAAE;YACP,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC9D,KAAK,EAAE,OAAO,CAAC,MAAM;iBAClB,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;iBACxC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;gBACvB,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,yBAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;gBACjD,OAAO;oBACL,GAAG,MAAM;oBACT,CAAC,MAAM,CAAC,EAAE,IAAI;iBACf,CAAA;YACH,CAAC,EAAE,EAAE,CAAC;YACR,OAAO,EAAE,iBAAiB,CAAC,OAAO,EAAE,GAAG,CAAC;YACxC,OAAO,EAAE,OAAO,CAAC,aAAa;SAC/B;KACF,CAAA;AACH,CAAC;AA1CD,gDA0CC;AAED,SAAgB,cAAc,CAAC,CAAqB;IAClD,IAAI,CAAC,KAAK,SAAS,EAAE;QACnB,OAAO,KAAK,CAAA;KACb;IACD,OAAO,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,KAAK,IAAI,CAAA;AAC5C,CAAC;AALD,wCAKC;AAED,SAAS,YAAY,CACnB,OAA2B,EAC3B,GAAsB;IAEtB,OAAO,CACL,OAAO,CAAC,OAAO;QACf,cAAc,CAAC,GAAG,CAAC,wBAAwB,CAAC;QAC5C,GAAG,CAAC,sBAAsB,KAAK,SAAS,CACzC,CAAA;AACH,CAAC;AAED,SAAS,iBAAiB,CACxB,OAA2B,EAC3B,GAAsB;IAEtB,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,CAAA;IAC1C,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,KAAK,CAAA;KACb;IACD,OAAO;QACL,GAAG,EAAE,GAAG,CAAC,oBAAoB;QAC7B,KAAK,EAAE,GAAG,CAAC,sBAAsB;KAClC,CAAA;AACH,CAAC","sourcesContent":["import { IParsedArgv, IParsedArgvOptions } from './argv_parser'\nimport OptionSplitter from './option_splitter'\nimport { IRunConfiguration } from '../configuration'\n\nexport async function buildConfiguration(\n  fromArgv: IParsedArgv,\n  env: NodeJS.ProcessEnv\n): Promise<IRunConfiguration> {\n  const { args, options } = fromArgv\n  return {\n    sources: {\n      paths: args,\n      defaultDialect: options.language,\n      names: options.name,\n      tagExpression: options.tags,\n      order: options.order,\n    },\n    support: {\n      transpileWith: options.requireModule,\n      paths: options.require,\n    },\n    runtime: {\n      dryRun: options.dryRun,\n      failFast: options.failFast,\n      filterStacktraces: !options.backtrace,\n      parallel: options.parallel,\n      retry: options.retry,\n      retryTagFilter: options.retryTagFilter,\n      strict: options.strict,\n      worldParameters: options.worldParameters,\n    },\n    formats: {\n      stdout: options.format.find((option) => !option.includes(':')),\n      files: options.format\n        .filter((option) => option.includes(':'))\n        .reduce((mapped, item) => {\n          const [type, target] = OptionSplitter.split(item)\n          return {\n            ...mapped,\n            [target]: type,\n          }\n        }, {}),\n      publish: makePublishConfig(options, env),\n      options: options.formatOptions,\n    },\n  }\n}\n\nexport function isTruthyString(s: string | undefined): boolean {\n  if (s === undefined) {\n    return false\n  }\n  return s.match(/^(false|no|0)$/i) === null\n}\n\nfunction isPublishing(\n  options: IParsedArgvOptions,\n  env: NodeJS.ProcessEnv\n): boolean {\n  return (\n    options.publish ||\n    isTruthyString(env.CUCUMBER_PUBLISH_ENABLED) ||\n    env.CUCUMBER_PUBLISH_TOKEN !== undefined\n  )\n}\n\nfunction makePublishConfig(\n  options: IParsedArgvOptions,\n  env: NodeJS.ProcessEnv\n): any {\n  const enabled = isPublishing(options, env)\n  if (!enabled) {\n    return false\n  }\n  return {\n    url: env.CUCUMBER_PUBLISH_URL,\n    token: env.CUCUMBER_PUBLISH_TOKEN,\n  }\n}\n"]}